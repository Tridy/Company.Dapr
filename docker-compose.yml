version: '3.4'

services:
  company.microservice.membership.service:
    image: ${DOCKER_REGISTRY-}companymicroservicemembershipservice
    build:
      context: .
      dockerfile: src/Company.Microservice.Membership.Service/Dockerfile
    depends_on:
      - seq.image
    links:
      - seq.image
    environment:
      - CONNECTIONSTRINGS__SEQ=http://seq.image

  company.microservice.membership.service-dapr:
    image: "daprio/daprd:latest"
    command:
      [
        "./daprd",
        "-app-id",
        "company-microservice-membership-service",
        "-app-port",
        "80",
        "-app-protocol",
        "grpc",
        "-log-level",
        "debug",
        "dapr.io/config",
        "tracing"
      ]
    depends_on:
      - company.microservice.membership.service
    network_mode: "service:company.microservice.membership.service"

  company.manager.membership.service:
    image: ${DOCKER_REGISTRY-}companymanagermembershipservice
    build:
      context: .
      dockerfile: src/Company.Manager.Membership.Service/Dockerfile
    depends_on:
      - seq.image
    links:
      - seq.image
    environment:
      - CONNECTIONSTRINGS__SEQ=http://seq.image

  company.manager.membership.service-dapr:
    image: "daprio/daprd:latest"
    command:
      [
        "./daprd",
        "-app-id",
        "company-manager-membership-service",
        "-app-port",
        "80",
        "-app-protocol",
        "grpc",
        "-log-level",
        "debug",
        "dapr.io/config",
        "tracing"
      ]
    depends_on:
      - company.manager.membership.service
    network_mode: "service:company.manager.membership.service"

  company.engine.registration.service:
    image: ${DOCKER_REGISTRY-}companyengineregistrationservice
    build:
      context: .
      dockerfile: src/Company.Engine.Registration.Service/Dockerfile
    depends_on:
      - seq.image
    links:
      - seq.image
    environment:
      - CONNECTIONSTRINGS__SEQ=http://seq.image

  company.engine.registration.service-dapr:
    image: "daprio/daprd:latest"
    command:
      [
        "./daprd",
        "-app-id",
        "company-engine-registration-service",
        "-app-port",
        "80",
        "-app-protocol",
        "grpc",
        "-log-level",
        "debug",
        "dapr.io/config",
        "tracing"
      ]
    depends_on:
      - company.engine.registration.service
    network_mode: "service:company.engine.registration.service"

  company.access.user.service:
    image: ${DOCKER_REGISTRY-}companyaccessuserservice
    build:
      context: .
      dockerfile: src/Company.Access.User.Service/Dockerfile
    depends_on:
      - redis.image
      - postgres.image
      - seq.image
    links:
      - redis.image
      - postgres.image
      - seq.image
    environment:
      - CONNECTIONSTRINGS__REDIS=redis.image
      - CONNECTIONSTRINGS__POSTGRES=Server=postgres.image;Port=${POSTGRES_PORT};User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=Users;Integrated Security=true;Pooling=true;
      - CONNECTIONSTRINGS__SEQ=http://seq.image

  company.access.user.service-dapr:
    image: "daprio/daprd:latest"
    command:
      [
        "./daprd",
        "-app-id",
        "company-access-user-service",
        "-app-port",
        "80",
        "-app-protocol",
        "grpc",
        "-log-level",
        "debug",
        "dapr.io/config",
        "tracing"
      ]
    depends_on:
      - company.access.user.service
    network_mode: "service:company.access.user.service"

  redis.image:
    image: redis:latest
    ports:
      - 6379:6379

  seq.image:
    #command: --memory=16g --memory-swap=16g
    image: datalust/seq:latest
    volumes:
      - ${SEQ_DATA}:/data
    ports:
      - 5342:5341
      - 81:80
    environment:
      - ACCEPT_EULA=Y

  postgres.image:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5433:${POSTGRES_PORT}
    volumes:
      - ${POSTGRES_DATA}:/var/lib/postgresql/data
